name: CI

on:
  push:
    branches:
      - '*'
      - '!main'

env:
  BUILDER_VERSION: v0.8.22
  BUILDER_SOURCE: releases
  BUILDER_HOST: https://d19elf31gohf1l.cloudfront.net
  PACKAGE_NAME: aws-crt-kotlin
  RUN: ${{ github.run_id }}-${{ github.run_number }}

jobs:
  linux-compat:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
          cache: 'gradle'
      # FIXME - we will need to migrate this to ECR to avoid throttle limits from dockerhub, for now rebuild the images during CI
      - name: Configure Docker Images
        run: |
          ./docker-images/build-all.sh
          docker images
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        run: |
          docker images
          ./gradlew apiCheck
          ./gradlew allTests

#  macos-compat:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v4
#        with:
#          submodules: true
#      - name: Configure JDK
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: 17
#          cache: 'gradle'
#      - name: Configure Docker Images
#        run: |
#          ./docker-images/build-all.sh
#      - name: Build and Test ${{ env.PACKAGE_NAME }}
#        run: |
#          ./gradlew apiCheck
#          ./gradlew allTests
#
#  windows-compat:
#    runs-on: windows-latest
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v4
#        with:
#          submodules: true
#      - name: Configure JDK
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: 17
#          cache: 'gradle'
#      - name: Configure Docker Images
#        run: |
#          ./docker-images/build-all.sh
#      - name: Build and Test ${{ env.PACKAGE_NAME }}
#        run: |
#          ./gradlew apiCheck
#          ./gradlew allTests
