name: CI

on:
  push:
    branches:
      - '*'
      - '!main'

env:
  BUILDER_VERSION: v0.8.22
  BUILDER_SOURCE: releases
  BUILDER_HOST: https://d19elf31gohf1l.cloudfront.net
  PACKAGE_NAME: aws-crt-kotlin
  RUN: ${{ github.run_id }}-${{ github.run_number }}
  # generated dockcross scripts default to `podman` when installed which
  # has issues when building with docker then executing via dockcross script which
  # picks up `podman` instead.
  OCI_EXE: docker

jobs:
  all-platforms:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13=x64, macos-14=m1
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
          cache: 'gradle'
      # Cache the Kotlin/Native toolchain based on the input Kotlin version from version catalog
      # see https://kotlinlang.org/docs/native-improving-compilation-time.html
      - uses: actions/cache@v4
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-
      # FIXME - we will need to migrate this to ECR to avoid throttle limits from dockerhub, for now rebuild the images during CI
      - name: Configure Docker Images
        run: |
          ./docker-images/build-all.sh
          docker images
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        run: |
          docker images
          ./gradlew build
